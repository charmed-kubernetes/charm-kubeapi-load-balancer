{% for server_port, backends in servers.items() -%}
upstream upstream_{{ server_port }} {
  {%- for backend, backend_port in backends %}
  server {{ backend }}:{{ backend_port }};
  {%- endfor %}
}

server {
    listen {{ server_port }} ssl http2;
    listen [::]:{{ server_port }} ssl http2 ipv6only=on;
    server_name server_{{ server_port }};

    access_log /var/log/nginx/apilb.access.log;
    error_log /var/log/nginx/apilb.error.log;

    ssl_session_cache shared:SSL:10m;
    ssl_certificate {{ server_certificate }};
    ssl_certificate_key {{ server_key }};
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers   on;
    ssl_session_tickets off;


    location / {
      proxy_buffering         off;
      proxy_http_version      1.1;
      proxy_set_header        Host $host;
      proxy_set_header        X-Real-IP $remote_addr;
      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_set_header        X-Forwarded-Proto-Version $http2;
      proxy_set_header        Upgrade $http_upgrade;
      proxy_set_header        Connection $http_connection;
      proxy_set_header        X-Stream-Protocol-Version "{{ x_stream_protocol_version or '$http_x_stream_protocol_version' }}";

      add_header              X-Stream-Protocol-Version $upstream_http_x_stream_protocol_version;

      proxy_pass              https://upstream_{{ server_port }};
      proxy_read_timeout      {{ proxy_read_timeout }};
    }
}
{%- endfor %}
